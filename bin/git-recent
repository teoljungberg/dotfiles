#!/bin/sh
#
# `git-recent` logs local and unpushed commits if there are any. If not, it logs
# the local tree against `origin/{master,main}`.

set -e
[ -n "$DEBUG" ] && set -ex

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  exit 1
fi

git_log() {
  git log --graph --pretty=format:'%h%d %s' "$@"
}

has_upstream() {
  git_branch=$(git symbolic-ref --short HEAD 2>/dev/null)

  [ -n "$(git config "branch.$git_branch.remote" 2>/dev/null)" ]
}

has_local_commits() {
  [ "$(git rev-list "@{upstream}..HEAD" | wc -l)" -gt 0 ]
}

has_unpulled_commits() {
  [ "$(git rev-list "HEAD..@{upstream}" | wc -l)" -gt 0 ]
}

git_initial_branch() {
  branches="(master|main)"

  if git branch | grep -qEo "$branches"; then
    git branch | grep -Eo "$branches" | head -n1
  else
    exit 1
  fi
}

if has_upstream && has_local_commits; then
  git_log "@{upstream}..HEAD" "$@"
elif has_upstream && has_unpulled_commits; then
  git_log "HEAD..@{upstream}" "$@"
else
  git_log "origin/$(git_initial_branch)..HEAD" "$@"
fi
